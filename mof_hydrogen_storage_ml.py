# -*- coding: utf-8 -*-
"""MOF_Hydrogen_storage_ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uU9ZyNBuF5tKt6kBuLzQ4VWc20GHHLl8
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('mof_db.csv')

df = df.dropna()

import seaborn as sns
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')

df.shape
df.head()

X= df.iloc[:, [0,3]].values
y= df.iloc[:, -3].values
print(X)
print(y)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

"""Multiple linear regression"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

y_pred = regressor.predict(X_test)

X_train[:,0]
X_train

np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

from sklearn.metrics import r2_score
r2_score(y_test, y_pred)

X_train[:, 0]

plt.scatter(X_train[:,0], y_train, color = 'red')
plt.scatter(X_test[:,0], regressor.predict(X_test), color = 'blue')
plt.xlabel('surface_area')
plt.ylabel('wt.% H')
plt.title('MOF hydrogen storage prediction')
plt.show()

plt.scatter(X_train[:, 1], y_train, color = 'red')
plt.scatter(X_test[:, 1], regressor.predict(X_test), color = 'blue')
plt.xlabel('pore volume')
plt.ylabel('wt.% H')
plt.title('MOF hydrogen storage prediction')

plt.show()

print(regressor.coef_)
print(regressor.intercept_)

"""Therefore, the equation of our simple linear regression model is:

wt. % H = (1.00e-03 × X1) + (2.38e+00 × X2) + 26816.19


Where, X1 is the surface area in m2/g

and X2 is the pore volume in cm3/g
"""

